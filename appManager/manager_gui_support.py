#! /usr/bin/env python
#
# Support module generated by PAGE version 4.5
# In conjunction with Tcl version 8.6
#    Dec 22, 2015 05:35:40 PM


import threading

try:
    from Tkinter import *  # noqa
except ImportError:
    from tkinter import *  # noqa

try:
    import ttk
    py3 = 0
except ImportError:
    import tkinter.ttk as ttk  # noqa
    py3 = 1


def doSetup():

    def run():
        runPip().join()
        runNpm().join()
        runGulp().join()
        genApacheConf().join()

    threading.Thread(target=run).start()


def runGulp():

    def run():
        global w
        from .commands import buildStaticFiles
        w.Scrolledtext1.insert(INSERT,
                               "STARTING GULP BUILD\n==============\n")
        for line in buildStaticFiles():
            w.Scrolledtext1.insert(INSERT, line)
            w.Scrolledtext1.see(END)
        w.Scrolledtext1.insert(INSERT, "\nAll Done!\n=========\n")
        w.Scrolledtext1.see(END)

    thread_obj = threading.Thread(target=run)
    thread_obj.start()
    return thread_obj


def runNpm():
    """
    Execute npm install to update frontend dependencies
    Now with timer and cool dot-waiting action!
    """
    def run():
        global w
        from .commands import setupNodeDeps
        w.Scrolledtext1.insert(INSERT, """
INSTALLING NPM DEPENDENCIES
===========================
This will take a while
""")

        timerflag = True

        def dotter():
            import time
            while timerflag:
                w.Scrolledtext1.insert(INSERT, ".")
                time.sleep(0.5)

        timer = threading.Timer(1.0, dotter)
        timer.start()
        for line in setupNodeDeps():
            pass
            # w.Scrolledtext1.see(END)
        timerflag = False
        w.Scrolledtext1.insert(INSERT, """
All Done!
=========
""")
        w.Scrolledtext1.see(END)

    thread_obj = threading.Thread(target=run)
    thread_obj.start()
    return thread_obj


def genApacheConf():

    def run():
        global w
        from .commands import setupApacheStuff
        for line in setupApacheStuff():
            w.Scrolledtext1.insert(INSERT, line)
            w.Scrolledtext1.see(END)

    thread_obj = threading.Thread(target=run)
    thread_obj.start()
    return thread_obj


def runPip():

    def run():
        global w
        from .commands import setupPyDeps
        for line in setupPyDeps():
            w.Scrolledtext1.insert(INSERT, line)
            w.Scrolledtext1.see(END)

    thread_obj = threading.Thread(target=run)
    thread_obj.start()
    return thread_obj


def runWatch():

    def run():
        global w
        from .commands import buildStaticFiles
        w.Scrolledtext1.insert(INSERT,
                               "STARTING GULP WATCH\n==============\n")
        for line in buildStaticFiles(watch=True):
            w.Scrolledtext1.insert(INSERT, line)
            w.Scrolledtext1.see(END)

    threading.Thread(target=run).start()


def init(top, gui, arg=None):
    global w, top_level, root
    w = gui
    top_level = top
    root = top


def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None
